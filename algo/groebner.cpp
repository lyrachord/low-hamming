#include "groebner.hpp"
#include "parameters.hpp"
using namespace std;
using namespace std::chrono;


char * RSA_1024 = (char *) "135066410865995223349603216278805969938881475605667027524485143851526510604859533833940287150571909441798207282164471551373680419703964191743046496589274256239341020864383202110372958725762358509643110564073501508187510676594629205563685529475213500852879416377328533906109750544334999811150056977236890927563";

char * RSA_232 = (char *) "1009881397871923546909564894309468582818233821955573955141120516205831021338528545374366109757154363664913380084917065169921701524733294389270280234380960909804976440540711201965410747553824948672771374075011577182305398340606162079";

char * RSA_240 = (char *) "124620366781718784065835044608106590434820374651678805754818788883289666801188210855036039570272508747509864768438458621054865537970253930571891217684318286362846948405301614416430468066875699415246993185704183030512549594371372";


char * RSA_250 = (char *) "2140324650240744961264423072839333563008614715144755017797754920881418023447140136643345519095804679610992851872470914587687396261921557363047454770520805119056493106687691590019759405693457452230589325976697471681738069364894699871578494975937497937";

char * RSA_260 = (char *) "22112825529529666435281085255026230927612089502470015394413748319128822941402001986512729726569746599085900330031400051170742204560859276357953757185954298838958709229238491006703034124620545784566413664540684214361293017694020846391065875914794251435144458199";

char * RSA_270 = (char *) "233108530344407544527637656910680524145619812480305449042948611968495918245135782867888369318577116418213919268572658314913060672626911354027609793166341626693946596196427744273886601876896313468704059066746903123910748277606548649151920812699309766587514735456594993207";

char* RSA_896 = (char *) "412023436986659543855531365332575948179811699844327982845455626433876445565248426198098870423161841879261420247188869492560931776375033421130982397485150944909106910269861031862704114880866970564902903653658867433731720813104105190864254793282601391257624033946373269391";

char * RSA_2048 = (char *) "25195908475657893494027183240048398571429282126204032027777137836043662020707595556264018525880784406918290641249515082189298559149176184502808489120072844992687392807287776735971418347270261896375014971824691165077613379859095700097330459748808428401797429100642458691817195118746121515172654632282216869987549182422433637259085141865462043576798423387184774447920739934236584823824281198163815010674810451660377306056201619676256133844143603833904414952634432190114657544454178424020924616515723350778707749817125772467962926386356373289912154831438167899885040445364023527381951378636564391212010397122822120720357";


bool FORMAT = true;

int main(int argc, char** argv){

  srand(time(NULL));
  // Fetch input. 
  
  if(argc == 2)
  {
    if((string)argv[1] == "-f"){
      FORMAT = false;
    }  
  }

  gmp_randstate_t state;
  gmp_randinit_default (state);
  
  mpz_t X;
  mpz_init(X);

  char * s = RSA_240;



  mpz_set_str(X, s, 10);

  mpz_div_ui(X,X,4);

  gmp_printf("%Zd\n",X);

  string xstr = mpz_get_str(NULL, 2, X);

  cout << format(xstr, FORMAT);
  
  return 0;

}
